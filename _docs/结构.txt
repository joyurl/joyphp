

通用型管理系统（用于操作本地数据表、API接口）


因购买流程过于复杂，暂时不用于购买流程

主要结构：
1 手工配置数据表
2 管理界面使用编辑器实现
3 流程控制使用编程实现（如何与2结合？）



1 需要手工配置的：
  1.1 config/config.php
   数据库及连接设置，使用者可修改

  1.2 include/config_table.php

   数据表名称配置（开发者修改），不包括系统配置表
   function config_table($key='')
   {

	$Tbl=Array();
	//需要修改的部分
	//@array : [key]='程序中使用的别名'; tblname='真实表名';title=中文名称,addlog=是否写修改日志和备份
	$Tbl['set_config'] =Array('tblname'=>'set_config','title'=>'系统配置','addlog'=>1);



	if(!empty($key)){
		if(!isset($Tbl[$key])) return '';
		return $Tbl[$key]['name'];
	}
	
	return $Tbl;
   }

  1.3 数据库的创建与修改
  数据库修改涉及数据，不能由编辑器任意修改

  1.4 管理配置的表
   include/config_sys_table.php
   function config_sys_table($key='')
   {
	$Tbl=Array();
	//以下部分不要动
	$Tbl['_sys_admin']  =Array('tblname'=>'_sys_admin','title'=>'管理员帐号表','addlog'=>1);
	$Tbl['_sys_menu']   =Array('tblname'=>'_sys_menu','title'=>'主菜单定义','addlog'=>1);

	if(!empty($key)){
		if(!isset($Tbl[$key])) return '';
		return $Tbl[$key]['name'];
	}
	
	return $Tbl;
   }

2 编辑器
  表1：定义主菜单（管理员权限可配置）
  表2：定义子菜单（管理员权限可配置）
       子菜单也是功能模块部分

  表3：可用对象定义（方法自动获取）

  功能定义部分：
  A 主配置：
    名称：
    显示模式：0 预览模式 1 普通编辑模式(支持分块) 2 列表管理模式 3 统计模式
    主表：(*)
    显示列(2/3)：
    搜索列(2/3)：
    功能菜单(2/3)：
    显示模型(2/3)：每页多少条
    批量管理(2/3)：批量改状态/批量设置某值为_____
    帮助：

    需要解决：1 IP批量添加 2 IP或帐号复制问题 3 提交后的转换处理或确定 4 统计类（分实时或历史）

  B 数据字典
    B1 表名定义
    B2 字段定义
    B3 字典定义


  C 某个流程提供的方法（功能）
    比如网站型、拨号型VPS功能有差异

    解决升级，重启之类的问题


=================================


□公共管理： 欢迎页 | 软件版本 | 修改密码

□模块设置（独立写）
   对象管理
   数据表管理
   功能配置（可分二级，派生三级）
   备份管理（可自动还原到某个点）
  
□系统配置：帐号管理（接口处理）


=================================
系统表

#如何备份或还原设置???

_sql_log    SQL同步备份管理（用于记录对数据表的更新记录）
_bak_log 备份日志
_set_backup     设置备份
_set_menu       功能模块配置表
_set_object     对象管理（不包括基本对象）
_set_table      数据表管理
_admin_main       操作功能管理
_admin_main_act   操作区块定义（都需要）
_admin_main_list  详细内容定义（包括列表和表单型）

sys_config      网站配置表
sys_admin       管理员表
sys_admin_limit 管理员权限


=================================


M：处理数据的各种对象
V：定义显示标准，及页面样式
P：处理逻辑、M与V的数据交互，支挂json或XML数据格式

基本对象：
$M：[Array]数据处理层：是$P需要调用的对象（数组），比如$TB（$M为存放对象的数组变量）
$V：[Object]视图处理
$P：[Object]处理逻辑、M与V数据交换、权限

其它（以下为不允许自定义对象使用的名称）：
$DB：[Object]数据库基本操作对象（直接操作数据库，不作任何逻辑处理的。但要处理差异备份相关）
$TB：[Object]数据表(Table)智能管理基础对象（用于对数据表进行管理操作，比如后台功能模块，需要对数据进行逻辑处理），返回标准的模型供$P处理
	其它数据库管理对象继承本对象
$TM: [Object]$TB表设置管理对象，用于编辑数据表的结构设计（结构存储在额外的配置表中），主要是管理员使用


模型类型：
A 列表型 list
  包括：
  □1 数据来源
  □2 搜索
  □3 筛选
  □4 功能
  □5 数据列
  □6 管理功能（用于批量管理）
    每个功能对应一个提交操作
  □7 使用说明

   1基本设置：
   名称、数据查询方法、

   2显示设置：
   名称1 | 名称2 ...
   预览值|  值2  

   排序值| 排序2 
   修改  | 修改  

   3辅助设置
   搜索框：多种模式搜索
   筛选框：下拉筛选
   功能框：操作区块（辅助的功能）
   管理框：批量管理功能

   4使用帮助：

 <result>
 <retcode>0/n</retcode>
 <errmsg>错误信息，result>0时显示的提示信息，有错时可能无boday</errmsg>
 <type>list</type>
 <title>新闻管理</title>
 <pageinfo>
  <pagenow>1</pagenow>
  <pagenum>2</pagenum>
  <rowsnum>15</rowsnum>
  <pagesize>10</pagesize>
 </pageinfo>
 <search>
  <data><tag>title</tag><name>news_title</name><title>标题</title><mode>=|%|?|>|<|>=|<=</mode></data>
  <data><tag>date</tag><name>news_adddate</name><title>添加时间</title><mode>=|%|?|>|<|>=|<=</mode></data>
 </search>
 <!--筛选设置-->
 <sort>
  <_s>
  <data><value></value><title>--状态--</title></data>
  <data><value>0</value><title>正常</title></data>
  <data><value>1</value><title>暂停</title></data>
  </_s>
  <_kd>
  <data><value></value><title>--分类--</title></data>
  <data><value>11</value><title>公司动态</title></data>
  <data><value>12</value><title>行业新闻</title></data>
  </_kd>
 </sort>
 <action>
  <!--其它功能-->
  <data><title>添加文章</title><type>link/button</type><menu>newsadd</menu></data>
  <data><title>导出数据</title><type>link/button</type><menu>newsdump</menu></data>
 </action>
 <head> <!--本标签只识别一个，若有多个以最后一个为准-->
  <id>自编号</id><title>标题</title><adddate>添加时间</adddate><edit>编辑</edit>
 </head>
 <!--本标签为主数据，只能有一个，多个以最后为准-->

 <data><id>10001</id><title>特大喜讯，网站正式上线</title><adddate>2017-1-1</adddate><edit>编辑</edit></data>
 <data><id>10002</id><title>网站日访问量突破1万</title><adddate>2017-4-1</adddate><edit>编辑</edit></data>
 <data><id>10003</id><title>网站日访问量突破2万</title><adddate>2017-5-1</adddate><edit>编辑</edit></data>
 <batch>
  <!--批量管理功能-->
  <data><title>暂停</title><name>stop</name></li>
  <data><title>恢复</title><name>resume</name></li>
  <data><title>删除</title><name>del</name></li>
 </batch>
 <batchsave>
  <!--批量修改的保存功能-->
 </batchsave>
 <remark>使用说明：本值为使用说明</remark>
 </result>



B 编辑/预览型 view

 <result>
 <retcode>0/n</retcode>
 <errmsg>错误信息，result>0时显示的提示信息，有错时可能无boday</errmsg>
 <type>list</type>
 <title>新闻管理</title>
 <form>
  <name*>
   <save>无内容不保存</save>
   <title>基本信息</title>
   <type>form</type>
   <data></data>
  </name*>
  <name*>
   <save>无内容不保存</save>
   <title>相关数据</title>
   <type>list</type>
   <head></head>
   <data></data>
  </name*>
 </form>
 </result>

  □1 提交操作定义（可定义多个，用于分段显示）
    (1) 预览型（不需要定义提交操作）
    (2) 提交型（必须定义提交处理的方法，无须定义编辑框的给action类型使用）
    (3) 编辑型（必须定义提交处理的方法，必须定义编辑框的）
     (2.1) 数据检查流程（包括输入合法性、唯一值是否重复、使用方法检查是否可用比如余额）
     (2.2) 提交处理方法（可多个，比如同时保存两个表）
     (2.3) 提交后转到什么方法（对应页面&_menu=）
    (4) A列表型（相关资源）

  □2 数据行（在1之下定义）
    行类型：
    (0) header：抬头
    (1) view：直接显示
    (2) hidden：隐藏数据
    (3) text：text表单
    (4) password：
    (5) radio
    (6) select
    (7) textarea：
    (8) action：
      (8.1) 可定义多个功能按钮，分别对应1的提交操作
      (8.2) 备注
    (9) 图形数据
       条形、圆形、时间轴

  □3 使用说明

   1基本设置：
   名称、数据查询方法、首列宽、次列宽

   2显示设置：
   ID | 操作名称  |  类型   | 排序| 备注列|    修改  |  内容定义 |   操作定义 
   11  详细资料     预览型     0     无     修改 删除     *行          ----     
   12  管理操作     提交型     0     无     修改 删除     *行          管理提交操作
   13  订单备注     提交型     0     无     修改 删除     *行          管理提交操作
   14  存储列表     列表型     0     --   

   3 使用帮助：



C 图表型 chart

D 报表型 report

E 配置表（辅助）conf
  获得功能菜单



请求结构：

A 本地：
 Views : 接受POST数据，加入 $_data
直接调用M对象
B 远程客户端
 Views : 接受POST数据，加入 $_data
 加密，调用 中间对象
 中间对象调用远程API，加密后用_data传递数据
C 远程服务端
 API接收数据，解密，加入$_data
 调用M对象
$_data 必须在对象外部设置，因为不确定是API过来的还是POST/GET过来的请求。API加密数据解密后还原为数组传给M对象。
